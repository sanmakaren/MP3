select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_2.csv")
predict_model_2 <- model_2 %>%
broom::augment(newdata = test) %>%
mutate(fitted_prob = 1/(1 + .fitted))
submission2 <- test %>%
mutate(project_is_approved = predict_model_2$.fitted) %>%
select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_2.csv")
View(predict_model_2)
submission2 <- test %>%
mutate(project_is_approved = predict_model_2$fitted_prob) %>%
select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_2.csv")
View(submission2)
predict_model_test <- model_2 %>%
broom::augment(newdata = test, type.predict = "response")
ggplot(data=predict_model_2, aes(predict_model_2$fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_2 on test data")
ggplot(data=predict_model_2, aes(predict_model_2$.fitted)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_2 on test data")
submission2 <- test %>%
mutate(project_is_approved = predict_model_2$.fitted) %>%
select(id, project_is_approved)
predict_model_test <- model_2 %>%
broom::augment(newdata = test, type.predict = "response")
ggplot(data=predict_model_2, aes(predict_model_2$.fitted)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_2 on test data")
submission2 <- test %>%
mutate(project_is_approved = predict_model_2$.fitted) %>%
select(id, project_is_approved)
predict_model_test <- model_2 %>%
broom::augment(newdata = test, type.predict = "response")
fitted_points_model_2 <- model_2 %>%
broom::augment()
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted)),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
fitted_points_model_1$teacher_number_of_previously_posted_projects <- training$teacher_number_of_previously_posted_projects
roc_auc(fitted_points_model_2, as.factor(project_is_approved), fitted_prob)
predict_model_test <- model_2 %>%
broom::augment(newdata = test, type.predict = "response")
predict_model_2 <- model_2 %>%
broom::augment(newdata = test, type.predict = "response")
submission2 <- test %>%
mutate(project_is_approved = predict_model_2$.fitted) %>%
select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_2.csv")
predict_model_1 <- model_1 %>%
broom::augment(newdata = test, type.predict = "response")
predict_model_3 <- model_3 %>%
broom::augment(newdata = test, type.predict = "response")
#does hisotogram need to show grade levels?
ggplot(data=predict_model_3, aes(.fitted)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_3 on test data")
submission3 <- test %>%
mutate(project_is_approved = .fitted) %>%
select(id, project_is_approved)
predict_model_3 <- model_3 %>%
broom::augment(newdata = test, type.predict = "response")
submission3 <- test %>%
mutate(project_is_approved = predict_model_3.fitted) %>%
select(id, project_is_approved)
submission3 <- test %>%
mutate(project_is_approved = predict_model_3$.fitted) %>%
select(id, project_is_approved)
write_csv(submission3, path = "data/submission_model_3.csv")
View(submission3)
autoplot(roc_curve(fitted_points_model_3, as.factor(project_is_approved), fitted_prob ))
model_4 <- glm(project_is_approved ~ project_grade_category + teacher_number_of_previously_posted_projects, data= training)
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob)
fitted_points_model_4 <- model_4 %>%
broom::augment()
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted)),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob)
submission4 <- test %>%
mutate(project_is_approved = .fitted) %>%
select(id, project_is_approved)
submission4 <- test %>%
mutate(project_is_approved = predict_model_4.fitted) %>%
select(id, project_is_approved)
submission4 <- test %>%
mutate(project_is_approved = predict_model_4$.fitted) %>%
select(id, project_is_approved)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test, type.predict = "response")
submission4 <- test %>%
mutate(project_is_approved = predict_model_4$.fitted) %>%
select(id, project_is_approved)
write_csv(submission4, path = "data/submission_model_4.csv")
View(submission4)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test, type.predict = "response")
submission4 <- test %>%
mutate(project_is_approved = predict_model_4$.fitted) %>%
select(id, project_is_approved)
write_csv(submission4, path = "data/submission_model_4.csv")
View(submission4)
model_4 <- glm(project_is_approved ~ project_grade_category + teacher_number_of_previously_posted_projects, data= training, family = binomial())
fitted_points_model_4 <- model_4 %>%
broom::augment()
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted)),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test, type.predict = "response")
submission4 <- test %>%
mutate(project_is_approved = predict_model_4$.fitted) %>%
select(id, project_is_approved)
write_csv(submission4, path = "data/submission_model_4.csv")
View(submission4)
model_1 <- glm(project_is_approved~1, data= training, family = binomial())
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted)),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob)
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate(
fitted_prob = 1/(1 + .fitted),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test, type.predict = "response") %>%
mutate(fitted_prob = 1/(1 + .fitted))
mutate(fitted_prob = 1/(1 + exp(-.fitted)),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test, type.predict = "response") %>%
mutate(fitted_prob = 1/(1 + exp(-fitted_points_model_4$.fitted)))
predict_model_4 <- model_4 %>%
broom::augment(newdata = test, type.predict = "response") %>%
mutate(fitted_prob = 1/(1 + exp(-predict_model_4$.fitted)))
View(predict_model_4)
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob)
e^.3
exp(.3)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test, type.predict = "response") %>%
mutate(fitted_prob = exp(fitted_points_model_4$.fitted)/(1+exp(fitted_points_model_4$.fitted)))
predict_model_4 <- model_4 %>%
broom::augment(newdata = test, type.predict = "response") %>%
mutate(fitted_prob = exp(predict_model_4$.fitted)/(1+exp(predict_model_4$.fitted)))
predict_model_4 <- model_4 %>%
broom::augment(newdata = test, type.predict = "response") %>%
mutate(fitted_prob = exp(predict_model_4$.fitted)/(1+exp(predict_model_4$.fitted)))
View(predict_model_4)
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate( fitted_prob = 1/(1 + exp(-fitted_points_model_4$.fitted)) )
View(predict_model_4)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test) %>%
mutate(fitted_prob = exp(predict_model_4$.fitted)/(1+exp(predict_model_4$.fitted)))
View(submission4)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test) %>%
mutate(fitted_prob = exp(predict_model_4$.fitted)/(1+exp(predict_model_4$.fitted)))
submission4 <- test %>%
mutate(project_is_approved = predict_model_4$fitted_prob) %>%
select(id, project_is_approved)
write_csv(submission4, path = "data/submission_model_4.csv")
View(submission4)
# Load all your packages here:
library(tidyverse)
library(yardstick)
# Set default behavior for all code chunks here:
knitr::opts_chunk$set(
echo = TRUE, warning = FALSE, message = FALSE,
fig.width = 16/2, fig.height = 9/2
)
# Set seed value of random number generator here. This is in order to get
# "replicable" randomness, so that any results based on random sampling or
# resampling are replicable everytime you knit this file. Why use a seed value
# of 76? For no other reason than 76 is one of my favorite numbers:
# https://www.youtube.com/watch?v=xjJ7FheCkCU
set.seed(76)
model_4 <- glm(project_is_approved ~ project_grade_category + teacher_number_of_previously_posted_projects, data= training, family = binomial())
fitted_points_model_4 <- model_4 %>%
broom::augment()
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate(
fitted_prob = exp(fitted_points_model_4$.fitted)/(1+exp(fitted_points_model_4$.fitted))
)
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test) %>%
mutate(
fitted_prob = exp(predict_model_4$.fitted)/(1+exp(predict_model_4$.fitted))
)
submission4 <- test %>%
mutate(project_is_approved = predict_model_4$fitted_prob) %>%
select(id, project_is_approved)
View(submission4)
model_3 <- glm(project_is_approved ~ project_grade_category, data= training, family = binomial())
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob = exp(fitted_points_model_3$.fitted)/(1+exp(fitted_points_model_3$.fitted))
)
fitted_points_model_1$project_grade_category <- training$project_grade_category
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob)
model_3 <- glm(project_is_approved ~ project_grade_category, data= training, family = binomial())
fitted_points_model_3 <- model_3 %>%
broom::augment()
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob = exp(fitted_points_model_3$.fitted)/(1+exp(fitted_points_model_3$.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob)
View(fitted_points_model_1)
View(fitted_points_model_3)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob)
model_3 <- glm(project_is_approved ~ project_grade_category, data= training, family = binomial())
fitted_points_model_3 <- model_3 %>%
broom::augment()
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob = exp(fitted_points_model_3$.fitted)/(1+exp(fitted_points_model_3$.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob)
model_4 <- glm(project_is_approved ~ project_grade_category + teacher_number_of_previously_posted_projects, data= training, family = binomial())
fitted_points_model_4 <- model_4 %>%
broom::augment()
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate(
fitted_prob = exp(fitted_points_model_4$.fitted)/(1+exp(fitted_points_model_4$.fitted))
)
autoplot(roc_curve(fitted_points_model_4, as.factor(project_is_approved), fitted_prob ))
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob)
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob2 = 1/(1 + exp(.fitted))
fitted_prob = exp(fitted_points_model_3$.fitted)/(1+exp(fitted_points_model_3$.fitted))
)
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob2 = 1/(1 + exp(.fitted)),
fitted_prob = exp(fitted_points_model_3$.fitted)/(1+exp(fitted_points_model_3$.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob2)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), 1-fitted_prob)
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob2 = 1/(1 + exp(.fitted)),
fitted_prob = exp(fitted_points_model_3$.fitted)/(1+exp(fitted_points_model_3$.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob)
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob2 = 1/(1 + exp(-.fitted)),
fitted_prob = exp(fitted_points_model_3$.fitted)/(1+exp(fitted_points_model_3$.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob2)
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob2 = 1/(1 + exp(-.fitted)),
fitted_prob = exp(fitted_points_model_3$.fitted)/(1+exp(fitted_points_model_3$.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob2)
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob2 = 1/(1 + exp(.fitted)),
fitted_prob = exp(fitted_points_model_3$.fitted)/(1+exp(fitted_points_model_3$.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob2)
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate(
fitted_prob = exp(fitted_points_model_4$.fitted)/(1+exp(fitted_points_model_4$.fitted))
)
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob)
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate(
fitted_prob = exp(fitted_points_model_4$.fitted)/(1+exp(fitted_points_model_4$.fitted)),
fitted_prob2 = 1/(1 + exp(.fitted))
)
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob2)
predict_model_3 <- model_3 %>%
broom::augment(newdata = test) %>%
mutate(
project_is_approved = exp(predict_model_3$.fitted)/(1+exp(predict_model_3$.fitted))
)
submission3 <- test %>%
select(id, project_is_approved)
write_csv(submission3, path = "data/submission_model_3.csv")
submission3 <- test %>%
select(id, predict_model_3$project_is_approved)
submission3 <- test %>%
mutate(project_is_approved = predict_model_3$fitted_prob)
predict_model_3 <- model_3 %>%
broom::augment(newdata = test) %>%
mutate(
fitted_prob = exp(predict_model_3$.fitted)/(1+exp(predict_model_3$.fitted))
)
submission3 <- test %>%
mutate(project_is_approved = predict_model_3$fitted_prob)
select(id, project_is_approved)
select(id, project_is_approved)
submission3 <- test %>%
mutate(project_is_approved = predict_model_3$fitted_prob) %>%
select(id, project_is_approved)
View(submission3)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob2)
model_3 <- glm(project_is_approved ~ project_grade_category, data= training, family = binomial())
fitted_points_model_3 <- model_3 %>%
broom::augment()
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob)
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob)
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob = 1/(1 + exp(-.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob)
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted))
)
roc_auc(fitted_points_model_3, as.factor(project_is_approved), fitted_prob)
predict_model_2 <- model_2 %>%
broom::augment(newdata = test) %>%
mutate(fitted_prob = 1/(1 + exp(.fitted)))
ggplot(data=predict_model_2, aes(predict_model_2$fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_2 on test data")
model_2 <- glm(project_is_approved ~ teacher_number_of_previously_posted_projects, data= training, family = binomial())
fitted_points_model_2 <- model_2 %>%
broom::augment()
roc_auc(fitted_points_model_2, as.factor(project_is_approved), fitted_prob)
model_2 <- glm(project_is_approved ~ teacher_number_of_previously_posted_projects, data= training, family = binomial())
fitted_points_model_2 <- model_2 %>%
broom::augment()
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted))
)
roc_auc(fitted_points_model_2, as.factor(project_is_approved), fitted_prob)
predict_model_2 <- model_2 %>%
broom::augment(newdata = test) %>%
mutate(
fitted_prob = exp(predict_model_4$.fitted)/(1+exp(predict_model_4$.fitted))
)
submission2 <- test %>%
mutate(project_is_approved = predict_model_2$fitted_prob) %>%
select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_2.csv")
predict_model_2 <- model_2 %>%
broom::augment(newdata = test) %>%
mutate(
fitted_prob = exp(predict_model_2$.fitted)/(1+exp(predict_model_2$.fitted))
)
submission2 <- test %>%
mutate(project_is_approved = predict_model_2$fitted_prob) %>%
select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_2.csv")
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted))
)
roc_auc(fitted_points_model_2, as.factor(project_is_approved), fitted_prob)
submission <- test %>%
mutate(
project_is_approved = exp(predict_model_2$.fitted)/(1+exp(predict_model_2$.fitted))
) %>%
select(id, project_is_approved)
model_1 <- glm(project_is_approved~1, data= training, family = binomial())
fitted_points_model_1 <- model_1 %>%
broom::augment()
fitted_points_model_1 <- fitted_points_model_1 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted)),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
roc_auc(fitted_points_model_1, as.factor(project_is_approved), fitted_prob)
predict_model_1 <- model_1 %>%
broom::augment(newdata = test)
submission <- test %>%
mutate(
project_is_approved = exp(predict_model_2$.fitted)/(1+exp(predict_model_2$.fitted))
) %>%
select(id, project_is_approved)
write_csv(submission, path = "data/submission_model_1.csv")
submission <- test %>%
mutate(
project_is_approved = exp(predict_model_1$.fitted)/(1+exp(predict_model_1$.fitted))
) %>%
select(id, project_is_approved)
write_csv(submission, path = "data/submission_model_1.csv")
fitted_points_model_1 <- fitted_points_model_1 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted))
)
roc_auc(fitted_points_model_1, as.factor(project_is_approved), fitted_prob)
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
fitted_points_model_1$teacher_number_of_previously_posted_projects <- training$teacher_number_of_previously_posted_projects
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_boxplot() +
geom_line(
data = fitted_points_model_1, mapping = aes(y = fitted_prob, x =  project_grade_category, group=1 ),
col = "blue", size = 1) +
labs(x = "grade level", y = "probability project approved")
fitted_points_model_1$project_grade_category <- training$project_grade_category
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_boxplot() +
geom_line(
data = fitted_points_model_1, mapping = aes(y = fitted_prob, x =  project_grade_category, group=1 ),
col = "blue", size = 1) +
labs(x = "grade level", y = "probability project approved")
roc_auc(fitted_points_model_2, as.factor(project_is_approved), fitted_prob)
model_2 <- glm(project_is_approved ~ teacher_number_of_previously_posted_projects, data= training, family = binomial())
fitted_points_model_2 <- model_2 %>%
broom::augment()
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted))
)
fitted_points_model_1$teacher_number_of_previously_posted_projects <- training$teacher_number_of_previously_posted_projects
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(
fitted_prob = 1/(1 + exp(-.fitted))
)
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
roc_auc(fitted_points_model_2, as.factor(project_is_approved), fitted_prob)
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(
fitted_prob = 1/(1 + exp(.fitted))
)
fitted_points_model_1$teacher_number_of_previously_posted_projects <- training$teacher_number_of_previously_posted_projects
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
roc_auc(fitted_points_model_2, as.factor(project_is_approved), fitted_prob)
predict_model_2 <- model_2 %>%
broom::augment(newdata = test) %>%
mutate(
fitted_prob = exp(predict_model_2$.fitted)/(1+exp(predict_model_2$.fitted))
)
training <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
sample_submission <- read_csv("data/sample_submission.csv")
training$project_grade_category <- as.factor(training$project_grade_category)
# Load all your packages here:
library(tidyverse)
library(yardstick)
# Set default behavior for all code chunks here:
knitr::opts_chunk$set(
echo = TRUE, warning = FALSE, message = FALSE,
fig.width = 16/2, fig.height = 9/2
)
# Set seed value of random number generator here. This is in order to get
# "replicable" randomness, so that any results based on random sampling or
# resampling are replicable everytime you knit this file. Why use a seed value
# of 76? For no other reason than 76 is one of my favorite numbers:
# https://www.youtube.com/watch?v=xjJ7FheCkCU
set.seed(76)
training$project_grade_category <- as.factor(training$project_grade_category)
training$project_grade_category <- relevel(training$project_grade_category, "Grades PreK-2")
test$project_grade_category <- as.factor(test$project_grade_category)
test$project_grade_category <- relevel(test$project_grade_category, "Grades PreK-2")
model_4 <- glm(project_is_approved ~ project_grade_category + teacher_number_of_previously_posted_projects, data= training, family = binomial())
fitted_points_model_4 <- model_4 %>%
broom::augment()
fitted_points_model_4 <- fitted_points_model_4 %>%
mutate(
fitted_prob = exp(fitted_points_model_4$.fitted)/(1+exp(fitted_points_model_4$.fitted)),
fitted_prob2 = 1/(1 + exp(.fitted))
)
autoplot(roc_curve(fitted_points_model_4, as.factor(project_is_approved), fitted_prob ))
roc_auc(fitted_points_model_4, as.factor(project_is_approved), fitted_prob2)
predict_model_4 <- model_4 %>%
broom::augment(newdata = test)
predict_model_4 <- predict_model_4 %>%
mutate(
fitted_prob = exp(predict_model_4$.fitted)/(1+exp(predict_model_4$.fitted))
)
