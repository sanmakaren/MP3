# Load all your packages here:
library(tidyverse)
library(yardstick)
# Set default behavior for all code chunks here:
knitr::opts_chunk$set(
echo = TRUE, warning = FALSE, message = FALSE,
fig.width = 16/2, fig.height = 9/2
)
# Set seed value of random number generator here. This is in order to get
# "replicable" randomness, so that any results based on random sampling or
# resampling are replicable everytime you knit this file. Why use a seed value
# of 76? For no other reason than 76 is one of my favorite numbers:
# https://www.youtube.com/watch?v=xjJ7FheCkCU
set.seed(76)
training <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
sample_submission <- read_csv("data/sample_submission.csv")
glimpse(sample_submission)
# Load all your packages here:
library(tidyverse)
library(yardstick)
# Set default behavior for all code chunks here:
knitr::opts_chunk$set(
echo = TRUE, warning = FALSE, message = FALSE,
fig.width = 16/2, fig.height = 9/2
)
# Set seed value of random number generator here. This is in order to get
# "replicable" randomness, so that any results based on random sampling or
# resampling are replicable everytime you knit this file. Why use a seed value
# of 76? For no other reason than 76 is one of my favorite numbers:
# https://www.youtube.com/watch?v=xjJ7FheCkCU
set.seed(76)
model_no_pred <- glm(project_is_approved~1, data= training)
fitted_points_no_pred <- model_no_pred %>%
broom::augment()
fitted_points_no_pred
View(fitted_points_no_pred)
roc_auc(fitted_points_no_pred, project_is_approved, .fitted)
roc_auc(fitted_points_no_pred, as.factor(project_is_approved), .fitted)
predict_no_pred <- model_no_pred %>%
broom::augment(newdata = mtcars_test)
predict_no_pred <- model_no_pred %>%
broom::augment(newdata = test)
predict_no_pred
names(predict_no_pred)
sample_submission %>%
mutate(project_is_approved = .fitted) %>%
write_csv(path = "data/submission_model_1.csv")
View(sample_submission)
kaggle_submission <- test %>%
mutate(project_is_approved = .fitted) %>%
select(id, project_is_approved)
kaggle_submission <- test %>%
select(id, .fitted)
write_csv(path = "data/submission_model_1.csv")
kaggle_submission <- predict_no_pred %>%
select(id, .fitted)
write_csv(path = "data/submission_model_1.csv")
predict_no_pred %>%
select(id, .fitted)
write_csv(path = "data/submission_model_1.csv")
submission <- test %>%
mutate(project_is_approved = predict_no_pred$.fitted) %>%
select(id, project_is_approved) %>%
write_csv(path = "data/submission_model_1.csv")
submission <- test %>%
mutate(project_is_approved = predict_no_pred$.fitted) %>%
select(id, project_is_approved)
submission <- test %>%
mutate(project_is_approved = predict_no_pred$.fitted) %>%
select(id, project_is_approved)
write_csv(submission, path = "data/submission_model_1.csv")
View(submission)
View(training)
View(fitted_points_no_pred)
roc_curve(fitted_points_no_pred, project_is_approved, .fitted )
roc_curve(fitted_points_no_pred, as.factor(project_is_approved), .fitted )
autoplot(roc_curve(fitted_points_no_pred, as.factor(project_is_approved), .fitted ))
model_2 <- glm(project_is_approved~teacher_number_of_previously_posted_projects, data= training)
fitted_points_model_2 <- model_2 %>%
broom::augment()
View(fitted_points_no_pred)
fitted_points_model_2 <- model_2 %>%
broom::augment()
ggplot(
data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved) +
geom_jitter(height = 0.01)
)
ggplot(
data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved) +
geom_point()
)
ggplot(
data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved) +
geom_point()
)
ggplot(
data = training, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved) +
geom_point()
)
ggplot(data = training, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_point()
View(fitted_points_model_2)
data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_point()
ggplot(data = training, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_point()
ggplot(data = fitted_point_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_point()
fitted_points_model_2 <- model_2 %>%
broom::augment()
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_point()
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_smooth(method = "lm", se = FALSE) +
geom_line(data = fitted_points_model_2, mappeing = aes(y = fitted_prob), col = "red", size = 1) +
labs(x = "x", y = "y")
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_smooth(method = "lm", se = FALSE) +
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) +
labs(x = "x", y = "y")
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_smooth(method = "lm", se = FALSE) +
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) +
labs(x = "number of perviously posted projects", y = "project is approved")
fitted_points_no_pred <- fitted_points_no_pred %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_no_pred, mapping = aes(y = fitted_prob), col = "blue", size = 1) +
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) +
labs(x = "number of perviously posted projects", y = "project is approved")
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) +
labs(x = "number of perviously posted projects", y = "project is approved")
fitted_points_no_pred$hi <- "hi"
View(fitted_points_no_pred)
fitted_points_no_pred$teacher_number_of_previously_posted_projects <- training$teacher_number_of_previously_posted_projects
fitted_points_no_pred$teacher_number_of_previously_posted_projects <- training$teacher_number_of_previously_posted_projects
View(fitted_points_no_pred)
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) +
labs(x = "number of perviously posted projects", y = "project is approved")
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) +
labs(x = "number of perviously posted projects", y = "project is approved")
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_no_pred, mapping = aes(y = fitted_prob), col = "blue", size = 1) +
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) +
labs(x = "number of perviously posted projects", y = "project is approved")
roc_auc(fitted_points_model_2, as.factor(project_is_approved), .fitted)
predicted_points
predicted_points <- model_2 %>%
broom::augment(newdata = test)
predicted_points
predicted_points <- predicted_points %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
hist(predict_points$fitted_prob)
hist(predicted_points$fitted_prob)
qplot(predicted_points$fitted_prob,
geom="histogram",
binwidth = 0.5,
main = "Histogram for Age",
xlab = "Age",
fill=I("blue"),
col=I("red"),
alpha=I(.2),
xlim=c(20,50))
ggplot(data=predicted_points, aes(y= fitted_prob)) + geom_histogram()
ggplot(data=predicted_points, aes(predicted_points$fitted_prob)) + geom_histogram()
ggplot(data=predicted_points, aes(predicted_points$fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_2 on test data")
autoplot(roc_curve(fitted_points_model_2, as.factor(project_is_approved), .fitted ))
submission2 <- test %>%
mutate(project_is_approved = predicted_points$.fitted) %>%
select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_2.csv")
roc_auc(fitted_points_model_2, as.factor(project_is_approved), .fitted)
autoplot(roc_curve(fitted_points_no_pred, as.factor(project_is_approved), .fitted ))
roc_auc(fitted_points_no_pred, as.factor(project_is_approved), .fitted)
View(submission2)
View(submission)
model_2 <- glm(project_is_approved ~ teacher_number_of_previously_posted_projects, data= training)
fitted_points_model_2 <- model_2 %>%
broom::augment()
roc_auc(fitted_points_model_2, as.factor(project_is_approved), .fitted)
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(estimate = if_else(fitted_prob > .5), 1, 0))
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(estimate = if_else(fitted_prob > .5), 1, 0)
?if_else
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(estimate = (if_else(fitted_prob > 0.5, 1, 0) ) )
roc_auc(fitted_points_model_2, as.factor(project_is_approved), estimate)
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(fitted_est = (if_else(fitted_prob > 0.5, 1, 0) ) )
roc_auc(fitted_points_model_2, as.factor(project_is_approved), fitted_est)
autoplot(roc_curve(fitted_points_model_2, as.factor(project_is_approved), fitted_est ))
submission2 <- test %>%
mutate(project_is_approved = (if_else(fitted_prob > 0.5, 1, 0) )) %>%
select(id, project_is_approved)
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
fitted_points_no_pred <- fitted_points_no_pred %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
submission2 <- test %>%
mutate(project_is_approved = (if_else(predicted_points$fitted_prob > 0.5, 1, 0) )) %>%
select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_2.csv")
autoplot(roc_curve(fitted_points_no_pred, as.factor(project_is_approved), .fitted ))
fitted_points_no_pred <- fitted_points_no_pred %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)), fitted_est = (if_else(fitted_prob > 0.5, 1, 0) ) )
roc_auc(fitted_points_no_pred, as.factor(project_is_approved), fitted_est)
submission <- test %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)), project_is_approved = (if_else(fitted_prob > 0.5, 1, 0) ) ) %>%
select(id, project_is_approved)
submission <- test %>%
mutate(fitted_prob = 1/(1 + exp(-predict_no_pred$.fitted)), project_is_approved = (if_else(fitted_prob > 0.5, 1, 0) ) ) %>%
select(id, project_is_approved)
write_csv(submission, path = "data/submission_model_1.csv")
View(submission)
View(submission)
View(submission2)
model_1 <- glm(project_is_approved~1, data= training)
fitted_points_model_1 <- model_1 %>%
broom::augment()
fitted_points_no_pred
fitted_points_model_1 <- model_1 %>%
broom::augment()
fitted_points_model_1 <- fitted_points_model_1 %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)), binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) ) )
roc_auc(fitted_points_model_1, as.factor(project_is_approved), binary_estimate)
fitted_points_model_1 <- fitted_points_model_1 %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)), binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) ) )
roc_auc(fitted_points_model_1, as.factor(project_is_approved), binary_estimate)
predict_model_1 <- model_1 %>%
broom::augment(newdata = test)
predict_model_1
predict_model_1 <- model_1 %>%
broom::augment(newdata = test)
submission <- test %>%
mutate(
fitted_prob = 1/(1 + exp(-predict_model_1$.fitted)),
project_is_approved = (if_else(fitted_prob > 0.5, 1, 0) )
) %>%
select(id, project_is_approved)
write_csv(submission, path = "data/submission_model_1.csv")
View(submission)
submission <- test %>%
mutate(
fitted_prob = 1/(1 + exp(-predict_model_1$.fitted)),
project_is_approved = (if_else(fitted_prob > 0.5, 1, 0) )
) %>%
select(id, project_is_approved)
write_csv(submission, path = "data/submission_model_1.csv")
autoplot(roc_curve(fitted_points_model_1, as.factor(project_is_approved), binary_estimate ))
model_2 <- glm(project_is_approved ~ teacher_number_of_previously_posted_projects, data= training)
fitted_points_model_2 <- model_2 %>%
broom::augment()
fitted_points_model_2 <- fitted_points_model_2 %>%
mutate(
fitted_prob = 1/(1 + exp(-.fitted)),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
fitted_points_model_1$teacher_number_of_previously_posted_projects <- training$teacher_number_of_previously_posted_projects
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
roc_auc(fitted_points_model_2, as.factor(project_is_approved), binary_estimate)
predicted_points <- model_2 %>%
broom::augment(newdata = test)
predict_model_1 <- model_2 %>%
broom::augment(newdata = test)
predict_model_1 <- predict_model_1 %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
hist(predicted_points$fitted_prob)
hist(predict_model_1$fitted_prob)
predict_model_1 <- model_2 %>%
broom::augment(newdata = test) %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
predict_model_1 <- model_2 %>%
broom::augment(newdata = test) %>%
mutate(helo = 1/(1 + exp(-.fitted)))
predict_model_2 <- model_2 %>%
broom::augment(newdata = test) %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
View(predict_model_2)
ggplot(data=predicted_points, aes(predicted_points$fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_2 on test data")
ggplot(data=predict_model_2, aes(predicted_points$fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_2 on test data")
ggplot(data=predict_model_2, aes(predict_model_2$fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_2 on test data")
submission2 <- test %>%
mutate(project_is_approved = (if_else(predicted_points$fitted_prob > 0.5, 1, 0) )) %>%
select(id, project_is_approved)
submission2 <- test %>%
mutate(project_is_approved = (if_else(predict_model_2$fitted_prob > 0.5, 1, 0) )) %>%
select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_2.csv")
autoplot(roc_curve(fitted_points_model_2, as.factor(project_is_approved), fitted_est ))
autoplot(roc_curve(fitted_points_model_2, as.factor(project_is_approved), binary_estimate ))
View(training)
names(training)
str(trianing)
str(trianing)
str(training)
training$project_grade_category <- as.factor(training$project_grade_category)
model_3 <- glm(project_is_approved ~ project_grade_category, data= training)
fitted_points_model_3 <- model_3 %>%
broom::augment()
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob = 1/(1 + exp(-.fitted)),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=project_is_approved)) +
geom_point()
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point()
training$project_grade_category <- relevel(training$project_grade_category, "Grades PreK-2")
training$project_grade_category
model_3 <- glm(project_is_approved ~ project_grade_category, data= training)
fitted_points_model_3 <- model_3 %>%
broom::augment()
fitted_points_model_3 <- fitted_points_model_3 %>%
mutate(
fitted_prob = 1/(1 + exp(-.fitted)),
binary_estimate = (if_else(fitted_prob > 0.5, 1, 0) )
)
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point()
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_line()
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_smooth()
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point()
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1)  #plot model_1
fitted_points_model_1$project_grade_category <- training$project_grade_category
fitted_points_model_1$project_grade_category <- training$project_grade_category
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1)  #plot model_1
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1)  #plot model_1 +
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 +
labs(x = "grade level", y = "probability project approved")
View(fitted_points_model_1)
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 +
labs(x = "grade level", y = "probability project approved")
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
View(fitted_points_model_1)
ggplot(data = fitted_points_model_2, aes(x=teacher_number_of_previously_posted_projects, y=project_is_approved)) +
geom_jitter(height=0.01) +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) + #plot model_1 probabilities
geom_line(data = fitted_points_model_2, mapping = aes(y = fitted_prob), col = "red", size = 1) + #plot model_2 probabilities
labs(x = "number of perviously posted projects", y = "project is approved")
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) +
labs(x = "grade level", y = "probability project approved") +
y(0, 1)
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(y = fitted_prob), col = "blue", size = 1) +
labs(x = "grade level", y = "probability project approved") +
ylim(0, 1)
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_hline(yintercept=0.7000807)
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_hline(yintercept=0.7000807, color = "blue")
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(x = project_grade_category, y = fitted_prob), col = "blue", size = 1) +
labs(x = "grade level", y = "probability project approved") +
ylim(0, 1)
ggplot(data = fitted_points_model_3, aes(x=project_grade_category, y=fitted_prob)) +
geom_point() +
geom_line(data = fitted_points_model_1, mapping = aes(x = project_grade_category, y = fitted_prob), col = "blue", size = 1) +
labs(x = "grade level", y = "probability project approved")
roc_auc(fitted_points_model_3, as.factor(project_is_approved), binary_estimate)
predict_model_3 <- model_3 %>%
broom::augment(newdata = test) %>%
mutate(fitted_prob = 1/(1 + exp(-.fitted)))
ggplot(data=predict_model_3, aes(predict_model_3$fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_3 on test data")
ggplot(data=predict_model_3, aes(x = project_grade_category, y = fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_3 on test data")
ggplot(data=predict_model_3, aes( y = fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_3 on test data")
ggplot(data=predict_model_3, aes(fitted_prob)) +
geom_histogram() +
labs(x = "fitted probability", title = "model_3 on test data")
submission3 <- test %>%
mutate(project_is_approved = (if_else(predict_model_3$fitted_prob > 0.5, 1, 0) )) %>%
select(id, project_is_approved)
write_csv(submission2, path = "data/submission_model_3.csv")
autoplot(roc_curve(fitted_points_model_3, as.factor(project_is_approved), binary_estimate ))
